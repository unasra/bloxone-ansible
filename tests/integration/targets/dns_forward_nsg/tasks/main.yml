---

- module_defaults:
    group/infoblox.bloxone.all:
      portal_url: "{{ portal_url }}"
      portal_key: "{{ portal_key }}"
  block:
    # Create a random Forward Zone name to avoid conflicts
    - ansible.builtin.set_fact:
        forward_nsg_name: "test-forward-nsg-{{ 999999 | random | string }}.com."
        forward_nsg_secondary_name: "test-forward-nsg-{{ 999999 | random | string }}.com."

    - name: Create an Forward NSG (check mode)
      infoblox.bloxone.dns_forward_nsg:
        name: "{{ forward_nsg_name }}"
        state: present
      check_mode: true
      register: forward_nsg
    - name: Get Information about the Forward NSG
      infoblox.bloxone.dns_forward_nsg_info:
        filters:
          name: "{{ forward_nsg_name }}"
      register: forward_nsg_info
    - assert:
        that:
          - forward_nsg is changed
          - forward_nsg_info is not failed
          - forward_nsg_info.objects | length == 0

    - name: Create an Forward NSG
      infoblox.bloxone.dns_forward_nsg:
        name: "{{ forward_nsg_name }}"
        state: present
      register: forward_nsg
    - name: Get Information about the Forward NSG
      infoblox.bloxone.dns_forward_nsg_info:
        filters:
          name: "{{ forward_nsg_name }}"
      register: forward_nsg_info
    - assert:
        that:
          - forward_nsg is changed
          - forward_nsg_info is not failed
          - forward_nsg_info.objects | length == 1

    - name: Create a Forward NSG (idempotent)
      infoblox.bloxone.dns_forward_nsg:
        name: "{{ forward_nsg_name }}"
        state: present
      register: forward_nsg
    - assert:
        that:
          - forward_nsg is not changed
          - forward_nsg is not failed

    - name: Delete the Forward NSG (check mode)
      infoblox.bloxone.dns_forward_nsg:
        name: "{{ forward_nsg_name }}"
        state: absent
      check_mode: true
      register: forward_nsg
    - name: Get Information about the Forward NSG
      infoblox.bloxone.dns_forward_nsg_info:
        filters:
          name: "{{ forward_nsg_name }}"
      register: forward_nsg_info
    - assert:
        that:
          - forward_nsg is changed
          - forward_nsg_info is not failed
          - forward_nsg_info.objects | length == 1

    - name: Delete the Forward NSG
      infoblox.bloxone.dns_forward_nsg:
        name: "{{ forward_nsg_name }}"
        state: absent
      register: forward_nsg
    - name: Get Information about the Forward NSG
      infoblox.bloxone.dns_forward_nsg_info:
        filters:
          name: "{{ forward_nsg_name }}"
      register: forward_nsg_info
    - assert:
        that:
          - forward_nsg is changed
          - forward_nsg_info is not failed
          - forward_nsg_info.objects | length == 0

    - name: Delete the Forward NSG (idempotent)
      infoblox.bloxone.dns_forward_nsg:
        name: "{{ forward_nsg_name }}"
        state: absent
      register: forward_nsg
    - assert:
        that:
          - forward_nsg is not changed
          - forward_nsg is not failed

    - name: Create a Forward NSG with a comment
      infoblox.bloxone.dns_forward_nsg:
        name: "{{ forward_nsg_name }}"
        comment: "Test Comment"
        state: present
      register: forward_nsg
    - name: Get Information about the Forward NSG
      infoblox.bloxone.dns_forward_nsg_info:
        filters:
          name: "{{ forward_nsg_name }}"
      register: forward_nsg_info
    - assert:
        that:
          - forward_nsg_info is not failed
          - forward_nsg_info.objects | length == 1
          - forward_nsg_info.objects[0].id == forward_nsg.id
          - forward_nsg_info.objects[0].comment == "Test Comment"

    - name: Create a Forward NSG with External Forwarders
      infoblox.bloxone.dns_forward_nsg:
        name: "{{ forward_nsg_name }}"
        external_forwarders:
          - address: "192.168.1.0"
        state: present
      register: forward_nsg
    - name: Get Information about the Forward NSG
      infoblox.bloxone.dns_forward_nsg_info:
        filters:
          name: "{{ forward_nsg_name }}"
      register: forward_nsg_info
    - assert:
        that:
          - forward_nsg is not failed
          - forward_nsg_info is not failed
          - forward_nsg_info.objects | length == 1
          - forward_nsg_info.objects[0].id == forward_nsg.id
          - forward_nsg_info.objects[0].external_forwarders | length == 1
          - forward_nsg_info.objects[0].external_forwarders[0].address == "192.168.1.0"

    - name: Create a Forward NSG with Address and FQDN External Forwarders
      infoblox.bloxone.dns_forward_nsg:
        name: "{{ forward_nsg_name }}"
        external_forwarders:
          - address: "192.168.1.0"
            fqdn: "test_external_forwarder."
        state: present
      register: forward_nsg
    - name: Get Information about the Forward NSG
      infoblox.bloxone.dns_forward_nsg_info:
        filters:
          name: "{{ forward_nsg_name }}"
      register: forward_nsg_info
    - assert:
        that:
          - forward_nsg is not failed
          - forward_nsg_info is not failed
          - forward_nsg_info.objects | length == 1
          - forward_nsg_info.objects[0].id == forward_nsg.id
          - forward_nsg_info.objects[0].external_forwarders | length == 1
          - forward_nsg_info.objects[0].external_forwarders[0].address == "192.168.1.0"
          - forward_nsg_info.objects[0].external_forwarders[0].fqdn == "test_external_forwarder."

    - name: Create a Forward NSG with Forwarders Only Enabled
      infoblox.bloxone.dns_forward_nsg:
        name: "{{ forward_nsg_name }}"
        forwarders_only: true
        state: present
      register: forward_nsg
    - name: Get Information about the Forward NSG
      infoblox.bloxone.dns_forward_nsg_info:
        filters:
          name: "{{ forward_nsg_name }}"
      register: forward_nsg_info
    - assert:
        that:
          - forward_nsg is not failed
          - forward_nsg_info is not failed
          - forward_nsg_info.objects | length == 1
          - forward_nsg_info.objects[0].id == forward_nsg.id
          - forward_nsg_info.objects[0].forwarders_only == true

    - name: Create a Forward NSG with Tags
      infoblox.bloxone.dns_forward_nsg:
        name: "{{ forward_nsg_name }}"
        comment: "Test Comment"
        tags:
          location: "site-1"
        state: present
      register: forward_nsg
    - name: Get Information about the Forward NSG
      infoblox.bloxone.dns_forward_nsg_info:
        filters:
          name: "{{ forward_nsg_name }}"
      register: forward_nsg_info
    - assert:
        that:
          - forward_nsg_info is not failed
          - forward_nsg_info.objects | length == 1
          - forward_nsg_info.objects[0].id == forward_nsg.id
          - forward_nsg_info.objects[0].tags.location == "site-1"

    - name: Create Secondary Forward NSG referencing Primary
      infoblox.bloxone.dns_forward_nsg:
        name: "{{ forward_nsg_secondary_name }}"
        nsgs:
          - "{{ forward_nsg.id }}"
        state: present
      register: secondary_forward_nsg
    - name: Get Information about the Secondary Forward NSG Creation
      infoblox.bloxone.dns_forward_nsg_info:
        filters:
          name: "{{ forward_nsg_secondary_name }}"
      register: ssecondary_forward_nsg_info
    - assert:
        that:
          - ssecondary_forward_nsg_info is not failed
          - ssecondary_forward_nsg_info.objects | length == 1
          - ssecondary_forward_nsg_info.objects[0].nsgs | length == 1
          - ssecondary_forward_nsg_info.objects[0].nsgs[0] == forward_nsg.id

  always:
    - name: "Delete Secondary Forward NSG"
      infoblox.bloxone.dns_forward_nsg:
        name: "{{ forward_nsg_secondary_name }}"
        state: "absent"
      ignore_errors: true

    - name: "Delete Forward NSG"
      infoblox.bloxone.dns_forward_nsg:
        name: "{{ forward_nsg_name }}"
        state: "absent"
      ignore_errors: true
