---
- module_defaults:
    group/infoblox.bloxone.all:
      portal_url: "{{ portal_url }}"
      portal_key: "{{ portal_key }}"
  block:
    # Create a random View name to avoid conflicts
    - ansible.builtin.set_fact:
        name: "test-view-{{ 999999 | random | string }}"
        tag_value: "site-{{ 999999 | random | string }}"

    # Basic Test for View
    - name: Create a View
      infoblox.bloxone.dns_view:
        name: "{{ name }}"
        tags:
          location: "{{ tag_value }}"
        state: present
      register: view

    - name: Get View information by filters (name)
      infoblox.bloxone.dns_view_info:
        filters:
          name: "{{ name }}"
      register: view_info
    - assert:
        that:
          - view_info.objects | length == 1
          - view_info.objects[0].id == view.id

    - name: Get View information by filters (Id)
      infoblox.bloxone.dns_view_info:
        filters:
          id: "{{ view.id }}"
      register: view_info
    - assert:
        that:
          - view_info.objects | length == 1
          - view_info.objects[0].id == view.id

    - name: Get View information by filter query
      infoblox.bloxone.dns_view_info:
        filter_query: "name=='{{ name }}'"
    - assert:
        that:
          - view_info.objects | length == 1
          - view_info.objects[0].id == view.id

    - name: Get View information by tag filters
      infoblox.bloxone.dns_view_info:
        tag_filters:
          location: "{{ tag_value }}"
    - assert:
        that:
          - view_info.objects | length == 1
          - view_info.objects[0].id == view.id

  always:
    # Cleanup if the test fails
    - name: "Delete View"
      infoblox.bloxone.dns_view:
        name: "{{ name }}"
        state: "absent"
      ignore_errors: true
