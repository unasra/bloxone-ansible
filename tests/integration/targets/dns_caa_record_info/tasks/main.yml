---
- module_defaults:
    group/infoblox.bloxone.all:
      portal_url: "{{ portal_url }}"
      portal_key: "{{ portal_key }}"

  block:
    # Create a random CAA record name to avoid conflicts
    - ansible.builtin.set_fact:
        record_name: "test-caa-record-{{ 999999 | random | string }}"
        tag_value: "site-{{ 999999 | random | string }}"

    # Basic Test for CAA Record
    - name: Create a CAA Record
      infoblox.bloxone.dns_record:
        name_in_zone: "{{ record_name }}"
        zone: "{{ _auth_zone.id }}"
        type: "CAA"
        rdata:
          tag: "issue"
          value: "ca.example.com"
        tags:
          location: "{{ tag_value }}"
        state: present
      register: caa_record

    - name: Get CAA Record information by ID
      infoblox.bloxone.dns_record_info:
        id: "{{ caa_record.id }}"
      register: caa_record_info
    - assert:
        that:
          - caa_record_info.objects | length == 1

    - name: Get CAA Record information by filters
      infoblox.bloxone.dns_record_info:
        filters:
          name_in_zone: "{{ record_name }}"
          zone: "{{ _auth_zone.id }}"
          type: "CAA"
      register: caa_record_info
    - assert:
        that:
          - caa_record_info.objects | length == 1
          - caa_record_info.objects[0].id == caa_record.id

    - name: Get CAA Record information by raw filter query
      infoblox.bloxone.dns_record_info:
        filter_query: "name_in_zone=='{{ record_name }}' and zone=='{{ _auth_zone.id }}' and type=='CAA'"
    - assert:
        that:
          - caa_record_info.objects | length == 1
          - caa_record_info.objects[0].id == caa_record.id

    - name: Get CAA Record information by tag filters
      infoblox.bloxone.dns_record_info:
        tag_filters:
          location: "{{ tag_value }}"
    - assert:
        that:
          - caa_record_info.objects | length == 1
          - caa_record_info.objects[0].id == caa_record.id

  always:
    # Cleanup if the test fails
    - name: "Delete CAA Record"
      infoblox.bloxone.dns_record:
        name_in_zone: "{{ record_name }}"
        zone: "{{ _auth_zone.id }}"
        rdata:
          tag: "issue"
          value: "ca.example.com"
        type: "CAA"
        state: "absent"
      ignore_errors: true

    - name: "Delete Auth Zone"
      ansible.builtin.include_role:
       name: setup_auth_zone
       tasks_from: cleanup.yml

    - name: "Delete the View"
      ansible.builtin.include_role:
       name: setup_view
       tasks_from: cleanup.yml
