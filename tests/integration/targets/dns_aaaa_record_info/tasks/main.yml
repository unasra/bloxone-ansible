---
- module_defaults:
    group/infoblox.universal_ddi.all:
      portal_url: "{{ portal_url }}"
      portal_key: "{{ portal_key }}"

  block:
    # Create a random AAAA record name to avoid conflicts
    - ansible.builtin.set_fact:
        record_name: "test-aaaa-record-{{ 999999 | random | string }}"
        tag_value: "site-{{ 999999 | random | string }}"

    # Basic Test for AAAA Record
    - name: Create an AAAA Record
      infoblox.universal_ddi.dns_record:
        name_in_zone: "{{ record_name }}"
        zone: "{{ _auth_zone.id }}"
        rdata:
          address: "2001:db8::6"
        type: "AAAA"
        tags:
          location: "{{ tag_value }}"
        state: present
      register: aaaa_record

    - name: Get AAAA Record information by ID
      infoblox.universal_ddi.dns_record_info:
        id: "{{ aaaa_record.id }}"
      register: aaaa_record_info
    - assert:
        that:
          - aaaa_record_info.objects | length == 1

    - name: Get AAAA Record information by filters
      infoblox.universal_ddi.dns_record_info:
        filters:
          name_in_zone: "{{ record_name }}"
          zone: "{{ _auth_zone.id }}"
          type: "AAAA"
      register: aaaa_record_info
    - assert:
        that:
          - aaaa_record_info.objects | length == 1
          - aaaa_record_info.objects[0].id == aaaa_record.id

    - name: Get AAAA Record information by raw filter query
      infoblox.universal_ddi.dns_record_info:
        filter_query: "name_in_zone=='{{ record_name }}' and zone=='{{ _auth_zone.id }}' and type=='AAAA'"
    - assert:
        that:
          - aaaa_record_info.objects | length == 1
          - aaaa_record_info.objects[0].id == aaaa_record.id

    - name: Get AAAA Record information by tag filters
      infoblox.universal_ddi.dns_record_info:
        tag_filters:
          location: "{{ tag_value }}"
    - assert:
        that:
          - aaaa_record_info.objects | length == 1
          - aaaa_record_info.objects[0].id == aaaa_record.id

  always:
    # Cleanup if the test fails
    - name: "Delete AAAA Record"
      infoblox.universal_ddi.dns_record:
        name_in_zone: "{{ record_name }}"
        zone: "{{ _auth_zone.id }}"
        rdata:
          address: "2001:db8::6"
        type: "AAAA"
        state: "absent"
      ignore_errors: true

    - name: "Delete Auth Zone"
      ansible.builtin.include_role:
       name: setup_auth_zone
       tasks_from: cleanup.yml

    - name: "Delete the View"
      ansible.builtin.include_role:
       name: setup_view
       tasks_from: cleanup.yml
