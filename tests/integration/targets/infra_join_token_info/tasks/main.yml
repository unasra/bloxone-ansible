---
- module_defaults:
    group/infoblox.bloxone.all:
      csp_url: "{{ csp_url }}"
      api_key: "{{ api_key }}"

  block:
    - ansible.builtin.set_fact:
        name: "test-ui-join-token-{{ 999999 | random | string }}"
        tag_value: "site-{{ 999999 | random | string }}"

    - name: Create an UI Join Token
      infoblox.bloxone.infra_join_token:
        name: "{{ name }}"
        tags:
          location: "{{ tag_value }}"
        state: present
      register: ui_join_token

    - name: Get Information about the UI Join Token by filters (Name)
      infoblox.bloxone.infra_join_token_info:
        filters:
          name: "{{ name }}"
      register: ui_join_token_info
    - assert:
        that:
          - ui_join_token_info.objects | length == 1
          - ui_join_token_info.objects[0].id == ui_join_token.id

    - name: Get Information about the UI Join Token by filter query
      infoblox.bloxone.infra_join_token_info:
        filter_query: "name=='{{ name }}'"
      register: ui_join_token_info
    - assert:
        that:
          - ui_join_token_info.objects | length == 1
          - ui_join_token_info.objects[0].id == ui_join_token.id

    - name: Get Information about the UI Join Token by tag filter
      infoblox.bloxone.infra_join_token_info:
        tag_filters:
          location: "{{ tag_value }}"
      register: ui_join_token_info
    - assert:
        that:
          - ui_join_token_info.objects | length == 1
          - ui_join_token_info.objects[0].id == ui_join_token.id

  always:
    - name: "Clean up the Join Token"
      infoblox.bloxone.infra_join_token:
        name: "{{ name }}"
        state: absent
      ignore_errors: true